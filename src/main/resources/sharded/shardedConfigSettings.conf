akka {
  actor {
    allow-java-serialization = true
    provider = cluster //new change for using sharding
  }

  persistence {
    journal {
      plugin = "akka.persistence.cassandra.journal"
    }

    snapshot-store {
      plugin = "akka.persistence.cassandra.snapshot"
    }

    #Contact points need setup for docker-compose/kubernetes
    cassandra-journal.contact-points = ["cassandra-service"]
    cassandra-snapshot-store.contact-points = ["cassandra-service"]

    cassandra {
      journal {
        tables-autocreate = true
        keyspace-autocreate = true

        #Contact points need setup for docker-compose/kubernetes
        contact-points = ["cassandra-service"]
        port = 9042

        events-by-tag {
          first-time-bucket = "20230207T00:00"
        }

        event-adapters {
          detach-adapter = "com.tudux.taxi.actors.cost.TaxiTripCostAdapter"
        }

        event-adapter-bindings {
          "com.tudux.taxi.actors.cost.TaxiTripCostEvent$TaxiTripCostCreatedEvent" = detach-adapter
          "com.tudux.taxi.actors.cost.TaxiTripCostEvent$TaxiTripCostCreatedEvent" = detach-adapter
          "com.tudux.taxi.actors.cost.TaxiTripCostEvent$TaxiTripCostCreatedEvent" = detach-adapter
          "com.tudux.taxi.actors.cost.TaxiTripCostDataModel$WrittenTaxiTripCostCreated" = detach-adapter
          "com.tudux.taxi.actors.cost.TaxiTripCostDataModel$WrittenUpdatedTaxiTripCost" = detach-adapter
          "com.tudux.taxi.actors.cost.TaxiTripCostDataModel$WrittenDeletedTaxiTripCost" = detach-adapter
        }

      }
      snapshot {
        tables-autocreate = true
        keyspace-autocreate = true
      }

    }
  }

  //new changes used for sharding
  remote {
    artery {
      enabled = on
      transport = aeron-udp
      canonical.hostname = "localhost"
      canonical.port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://YellowTaxiCluster@localhost:2551",
      #"akka://YellowTaxiCluster@localhost:2561"
    ]
  }

  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
      route-providers-read-only = false
    }
  }

}

datastax-java-driver {
  advanced {
    reconnect-on-init = true
  }

  #Contact points need setup for docker-compose/kubernetes
  basic.contact-points = ["cassandra-service:9042"]
  basic.load-balancing-policy {
    local-datacenter = "datacenter1"
  }
}

swagger {
  api {
    # this is platform3-snap3 staging url
    url = "localhost:10001"
    base {
      path = "/"
    }
    protocol = "http"
  }
}